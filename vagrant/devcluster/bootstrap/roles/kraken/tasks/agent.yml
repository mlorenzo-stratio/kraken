- name: Install EPEL repository
  yum:
    name: epel-release
    state: latest

- name: Install packages
  yum:
    name: ['curl', 'nginx']
    state: latest
  notify: Start kraken-agent service

- name: Create {{ group }} group
  group:
    name: "{{ group }}"
    state: present
    system: yes
  notify: Start kraken-agent service
  when: group is defined

- name: Create {{ user }} user
  user:
    name: "{{ user }}"
    group: "{{ group }}"
    state: present
    system: yes
  notify: Start kraken-agent service
  when: user is defined

- name: Create kraken-agent folders
  file:
    path: "{{ item }}"
    mode: 0775
    state: directory
    owner: "{{ user }}"
    group: "{{ group }}"
  with_items:
    - "{{ kraken_config_dir }}/tls/ca"
    - "{{ kraken_config_dir }}/tls/client"
    - "{{ kraken_log_dir }}"
    - "{{ kraken_cache_dir }}"
    - "{{ kraken_socket_dir }}"
    - "{{ kraken_nginx_cache_dir }}"
    - "{{ kraken_nginx_log_dir }}"
    - "{{ kraken_nginx_lib_dir }}"
    - "{{ kraken_nginx_lib_tmp_dir }}"
  notify: Start kraken-agent service

- name: Copy kraken-agent binary
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ user }}"
    group: "{{ group }}"
    mode: 0755
  with_items:
    - { src: "kraken-agent",  dest: "{{ kraken_binary_dir }}/kraken-agent" }
  notify: Start kraken-agent service

- name: Copy kraken-agent configuration files & certificates
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ user }}"
    group: "{{ group }}"
  with_items:
    - { src: "config", dest: "/etc/kraken/nginx/" }
    - { src: "tls",    dest: "/etc/kraken/" }
    # - { src: "{{ ansible_fqdn }}_client.pem", dest: "{{ kraken_config_dir }}/tls/client/client.crt" }
    # - { src: "{{ ansible_fqdn }}_client.key", dest: "{{ kraken_config_dir }}/tls/client/client.key" }
    # - { src: "{{ ansible_fqdn }}_server.pem", dest: "{{ kraken_config_dir }}/tls/ca/server.crt" }
    # - { src: "{{ ansible_fqdn }}_server.key", dest: "{{ kraken_config_dir }}/tls/ca/server.key" }
  notify: Start kraken-agent service

- name: Create kraken configuration files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0644
    owner: "{{ user }}"
    group: "{{ group }}"
  with_items:
    - { src: "agent.yaml.j2",      dest: "/etc/kraken/agent.yaml" }
    - { src: "agent_base.yaml.j2", dest: "/etc/kraken/base.yaml" }
  notify: Start kraken-agent service

- name: Install kraken-agent service
  template:
    src: agent.service.j2
    dest: /etc/systemd/system/kraken-agent.service
    mode: 0755
    owner: root
    group: root
  notify: Start kraken-agent service