- name: Install EPEL repository
  yum:
    name: epel-release
    state: latest

- name: Copy nginx RPM
  copy:
    src: nginx-1.10.3-1.el7.ngx.x86_64.rpm
    dest: /tmp

# https://nginx.org/packages/centos/7/x86_64/RPMS/nginx-1.10.3-1.el7.ngx.x86_64.rpm
- name: Install packages
  yum:
    name: ['sqlite-3.7.17', '/tmp/nginx-1.10.3-1.el7.ngx.x86_64.rpm']
    state: latest
  notify:
    - Start kraken-origin service
    - Start kraken-tracker service
    - Start kraken-build-index service

- name: Backup nginx default configuration
  copy:
    remote_src: True
    src: /etc/nginx/conf.d/default.conf
    dest: /etc/nginx/conf.d/default.conf.not
  failed_when: false

- name: Remove nginx default configuration
  file:
    path: /etc/nginx/conf.d/default.conf
    state: absent
  failed_when: false

- name: Create {{ group }} group
  group:
    name: "{{ group }}"
    state: present
    system: yes
  notify:
    - Start kraken-origin service
    - Start kraken-tracker service
    - Start kraken-build-index service
  when: group is defined

- name: Create {{ user }} user
  user:
    name: "{{ user }}"
    group: "{{ group }}"
    state: present
    system: yes
  notify:
    - Start kraken-origin service
    - Start kraken-tracker service
    - Start kraken-build-index service
  when: user is defined

- name: Create kraken-herd folders
  file:
    path: "{{ item }}"
    mode: 0775
    state: directory
    owner: "{{ user }}"
    group: "{{ group }}"
    recurse: yes
  with_items:
    - "{{ kraken_config_dir }}/tls/ca"
    - "{{ kraken_config_dir }}/tls/client"
    - "{{ kraken_log_dir }}"
    - "{{ kraken_cache_dir }}/origin"
    - "{{ kraken_cache_dir }}/tracker"
    - "{{ kraken_cache_dir }}/build-index"
    - "{{ kraken_cache_dir }}/redis"
    - "{{ kraken_socket_dir }}"
    - "{{ kraken_nginx_cache_dir }}"
    - "{{ kraken_nginx_log_dir }}"
    - "{{ kraken_nginx_lib_dir }}"
    - "{{ kraken_nginx_lib_tmp_dir }}"
  notify:
    - Start kraken-origin service
    - Start kraken-tracker service
    - Start kraken-build-index service

- name: Copy kraken-herd binaries
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ user }}"
    mode: 0755
  with_items:
    - { src: "redis-server",       dest: "{{ kraken_binary_dir }}/redis-server" }
    - { src: "kraken-build-index", dest: "{{ kraken_binary_dir }}/kraken-build-index" }
    - { src: "kraken-origin",      dest: "{{ kraken_binary_dir }}/kraken-origin" }
    - { src: "kraken-tracker",     dest: "{{ kraken_binary_dir }}/kraken-tracker" }
  notify:
    - Start kraken-origin service
    - Start kraken-tracker service
    - Start kraken-build-index service

- name: Copy kraken-herd configuration files & certificates
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ user }}"
  with_items:
    - { src: ".certs/ca.bundle",                                dest: "{{ kraken_config_dir }}/tls/ca/ca.crt" }
    - { src: ".certs/{{ ansible_hostname }}_client.pem",        dest: "{{ kraken_config_dir }}/tls/client/client.crt" }
    - { src: ".certs/{{ ansible_hostname }}_client.key",        dest: "{{ kraken_config_dir }}/tls/client/client.key" }
    - { src: ".certs/{{ ansible_hostname }}_client.passphrase", dest: "{{ kraken_config_dir }}/tls/client/passphrase" }
    - { src: ".certs/{{ ansible_hostname }}_server.pem",        dest: "{{ kraken_config_dir }}/tls/ca/server.crt" }
    - { src: ".certs/{{ ansible_hostname }}_server.key",        dest: "{{ kraken_config_dir }}/tls/ca/server.key" }
    - { src: ".certs/{{ ansible_hostname }}_server.passphrase", dest: "{{ kraken_config_dir }}/tls/ca/passphrase" }
  notify:
    - Start kraken-origin service
    - Start kraken-tracker service
    - Start kraken-build-index service

- name: Create kraken-herd configuration files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0644
    owner: "{{ user }}"
  with_items:
    - { src: "redis.conf.j2",            dest: "{{ kraken_config_dir }}/redis.conf" }
    - { src: "origin.yaml.j2",           dest: "{{ kraken_config_dir }}/origin.yaml" }
    - { src: "origin_base.yaml.j2",      dest: "{{ kraken_config_dir }}/origin_base.yaml" }
    - { src: "tracker.yaml.j2",          dest: "{{ kraken_config_dir }}/tracker.yaml" }
    - { src: "tracker_base.yaml.j2",     dest: "{{ kraken_config_dir }}/tracker_base.yaml" }
    - { src: "build-index.yaml.j2",      dest: "{{ kraken_config_dir }}/build-index.yaml" }
    - { src: "build-index_base.yaml.j2", dest: "{{ kraken_config_dir }}/build-index_base.yaml" }
  notify:
    - Start kraken-redis service
    - Start kraken-origin service
    - Start kraken-tracker service
    - Start kraken-build-index service

- name: Configure sysctl
  sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    sysctl_set: yes
    state: present
    reload: yes
  with_items:
    - { key: vm.overcommit_memory, value: '1' }
    - { key: net.core.somaxconn, value: '511' }
    - { key: net.ipv4.tcp_max_syn_backlog, value: '511' }
  notify: Start kraken-redis service

- name: Install kraken-redis service
  template:
    src: redis.service.j2
    dest: /etc/systemd/system/kraken-redis.service
    mode: 0755
    owner: root
    group: root
  notify: Start kraken-redis service

- name: Install kraken-origin service
  template:
    src: origin.service.j2
    dest: /etc/systemd/system/kraken-origin.service
    mode: 0755
    owner: root
    group: root
  notify: Start kraken-origin service

- name: Install kraken-tracker service
  template:
    src: tracker.service.j2
    dest: /etc/systemd/system/kraken-tracker.service
    mode: 0755
    owner: root
    group: root
  notify: Start kraken-tracker service

- name: Install kraken-build-index service
  template:
    src: build-index.service.j2
    dest: /etc/systemd/system/kraken-build-index.service
    mode: 0755
    owner: root
    group: root
  notify: Start kraken-build-index service